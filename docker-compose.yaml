version: "3.4"

services:
  metricsService:
    image: metrics_service:latest
    ports:
      - "8088:5000"
    environment:
      QUERY_URL: "http://host.docker.internal:3000/api/ds/query"
      TEMPO_URL: "http://host.docker.internal:3000/api/datasources/proxy/uid/tempo/"
    volumes:
      - ./backend:/app/config
    networks:
      - my-network
    depends_on:
      metricsDatabase:
        condition: service_healthy

    
  metricsDatabase:
    image: metrics_db:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: metrics_db
    ports:
      - "3321:3306"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  notificationsService:
    image: notifications_service:latest
    ports:
      - "8099:5000"
    networks:
      - my-network
    depends_on:
      notificationsDatabase:
        condition: service_healthy
  
  notificationsDatabase:
    image: notifications_db:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: notifications_db
    ports:
      - "3320:3306"
    networks:
      - my-network  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

      
  anomaly-detector:
    image: anomaly_detector:latest
    ports:
      - "8081:8080"
    environment:
      APP_NAME: "anomaly-detector"
    networks:
      - my-network

  


networks:
  my-network:
    driver: bridge